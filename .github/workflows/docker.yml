name: Docker
on:
  schedule:
    - cron: '0 1 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  docker-images:
    name: Docker Images
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Alpine Docker tags
        id: docker_alpine_tags
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/miniflux
          tags: |
            type=ref,event=pr
            type=schedule,pattern=nightly
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Generate Distroless Docker tags
        id: docker_distroless_tags
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/miniflux
          tags: |
            type=ref,event=pr
            type=schedule,pattern=nightly
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            suffix=-distroless,onlatest=true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: false
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Quay Container Registry
        if: false
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and Push Alpine images
        uses: docker/build-push-action@v6
        if: ${{ vars.PUBLISH_DOCKER_IMAGES == 'true' }}
        with:
          context: .
          file: ./packaging/docker/alpine/Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.docker_alpine_tags.outputs.tags }}

      - name: Build and Push Distroless images
        uses: docker/build-push-action@v6
        if: ${{ vars.PUBLISH_DOCKER_IMAGES == 'true' }}
        with:
          context: .
          file: ./packaging/docker/distroless/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_distroless_tags.outputs.tags }}
